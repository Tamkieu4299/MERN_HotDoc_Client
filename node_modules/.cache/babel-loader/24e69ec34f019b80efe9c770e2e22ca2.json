{"ast":null,"code":"var _jsxFileName = \"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/DoctorNow/client/src/components/ranking/Ranking.jsx\";\nimport \"./ranking.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Ranking(_ref) {\n  let {\n    allDoctors\n  } = _ref;\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  const sortedDoctor = data => {\n    const sorted = data.sort((doc1, doc2) => doc2.rating - doc1.rating);\n    let cnt = 0;\n    const ret = [];\n\n    while (cnt < 10 && cnt < sorted.length) ret.push(sorted[cnt++]);\n\n    return ret;\n  };\n\n  let position = 1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ranking\",\n      children: [sortedDoctor(allDoctors).length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rankChar\",\n        children: sortedDoctor.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rankRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rankPosition\",\n            children: position++\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: doc !== null && doc !== void 0 && doc.profilePicture ? doc.profilePicture : PF + \"/person/noAvatar.png\",\n            alt: \"\",\n            className: \"rankAvatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rankName\",\n            children: doc.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this) : \"No Doctors\", \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Ranking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ranking\");","map":{"version":3,"names":["Ranking","allDoctors","PF","process","env","REACT_APP_PUBLIC_FOLDER","sortedDoctor","data","sorted","sort","doc1","doc2","rating","cnt","ret","length","push","position","map","doc","profilePicture","username"],"sources":["/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/DoctorNow/client/src/components/ranking/Ranking.jsx"],"sourcesContent":["import \"./ranking.css\";\n\nexport default function Ranking({ allDoctors }) {\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n    const sortedDoctor = (data) => {\n        const sorted = data.sort((doc1, doc2) => doc2.rating - doc1.rating);\n        let cnt = 0;\n        const ret = [];\n        while (cnt < 10 && cnt < sorted.length) ret.push(sorted[cnt++]);\n        return ret;\n    };\n    let position = 1;\n\n    return (\n        <>\n            <div className=\"ranking\">\n                {sortedDoctor(allDoctors).length ? (\n                    <div className=\"rankChar\">\n                        {sortedDoctor.map((doc) => (\n                            <div className=\"rankRow\">\n                                <span className=\"rankPosition\">\n                                    {position++}\n                                </span>\n                                <img\n                                    src={\n                                        doc?.profilePicture\n                                            ? doc.profilePicture\n                                            : PF + \"/person/noAvatar.png\"\n                                    }\n                                    alt=\"\"\n                                    className=\"rankAvatar\"\n                                />\n                                <span className=\"rankName\">{doc.username}</span>\n                            </div>\n                        ))}\n                    </div>\n                ) : (\n                    \"No Doctors\"\n                )}\n                ;\n            </div>\n        </>\n    );\n}\n"],"mappings":";AAAA,OAAO,eAAP;;;AAEA,eAAe,SAASA,OAAT,OAAiC;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC5C,MAAMC,EAAE,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAvB;;EACA,MAAMC,YAAY,GAAIC,IAAD,IAAU;IAC3B,MAAMC,MAAM,GAAGD,IAAI,CAACE,IAAL,CAAU,CAACC,IAAD,EAAOC,IAAP,KAAgBA,IAAI,CAACC,MAAL,GAAcF,IAAI,CAACE,MAA7C,CAAf;IACA,IAAIC,GAAG,GAAG,CAAV;IACA,MAAMC,GAAG,GAAG,EAAZ;;IACA,OAAOD,GAAG,GAAG,EAAN,IAAYA,GAAG,GAAGL,MAAM,CAACO,MAAhC,EAAwCD,GAAG,CAACE,IAAJ,CAASR,MAAM,CAACK,GAAG,EAAJ,CAAf;;IACxC,OAAOC,GAAP;EACH,CAND;;EAOA,IAAIG,QAAQ,GAAG,CAAf;EAEA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,SAAf;MAAA,WACKX,YAAY,CAACL,UAAD,CAAZ,CAAyBc,MAAzB,gBACG;QAAK,SAAS,EAAC,UAAf;QAAA,UACKT,YAAY,CAACY,GAAb,CAAkBC,GAAD,iBACd;UAAK,SAAS,EAAC,SAAf;UAAA,wBACI;YAAM,SAAS,EAAC,cAAhB;YAAA,UACKF,QAAQ;UADb;YAAA;YAAA;YAAA;UAAA,QADJ,eAII;YACI,GAAG,EACCE,GAAG,SAAH,IAAAA,GAAG,WAAH,IAAAA,GAAG,CAAEC,cAAL,GACMD,GAAG,CAACC,cADV,GAEMlB,EAAE,GAAG,sBAJnB;YAMI,GAAG,EAAC,EANR;YAOI,SAAS,EAAC;UAPd;YAAA;YAAA;YAAA;UAAA,QAJJ,eAaI;YAAM,SAAS,EAAC,UAAhB;YAAA,UAA4BiB,GAAG,CAACE;UAAhC;YAAA;YAAA;YAAA;UAAA,QAbJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QADH,GAqBG,YAtBR;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AA8BH;KAzCuBrB,O"},"metadata":{},"sourceType":"module"}