{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quinn\\\\Desktop\\\\main2\\\\MERN_HotDoc_Client\\\\src\\\\components\\\\ranking\\\\Ranking.jsx\";\nimport \"./ranking.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Ranking(_ref) {\n  let {\n    allDoctors\n  } = _ref;\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  const sorted = data => {\n    const sorted = data.sort((doc1, doc2) => doc2.rating - doc1.rating);\n    let cnt = 0;\n    const ret = [];\n\n    while (cnt < 10 && cnt < sorted.length) ret.push(sorted[cnt++]);\n\n    return ret;\n  };\n\n  const sortedDoctor = sorted(allDoctors);\n  let position = 1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sortedDoctor.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rankChart\",\n      children: sortedDoctor.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rankRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rankPosition\",\n          children: position++\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: doc !== null && doc !== void 0 && doc.profilePicture ? doc.profilePicture : PF + \"/person/noAvatar.png\",\n          alt: \"\",\n          className: \"rankAvatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rankName\",\n          children: doc.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this) : \"No Doctors\"\n  }, void 0, false);\n}\n_c = Ranking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ranking\");","map":{"version":3,"names":["Ranking","allDoctors","PF","process","env","REACT_APP_PUBLIC_FOLDER","sorted","data","sort","doc1","doc2","rating","cnt","ret","length","push","sortedDoctor","position","map","doc","profilePicture","username"],"sources":["C:/Users/quinn/Desktop/main2/MERN_HotDoc_Client/src/components/ranking/Ranking.jsx"],"sourcesContent":["import \"./ranking.css\";\r\n\r\nexport default function Ranking({ allDoctors }) {\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const sorted = (data) => {\r\n        const sorted = data.sort((doc1, doc2) => doc2.rating - doc1.rating);\r\n        let cnt = 0;\r\n        const ret = [];\r\n        while (cnt < 10 && cnt < sorted.length) ret.push(sorted[cnt++]);\r\n        return ret;\r\n    };\r\n    const sortedDoctor = sorted(allDoctors);\r\n    let position = 1;\r\n\r\n    return (\r\n        <>\r\n            {/* <div className=\"ranking\"> */}\r\n                {sortedDoctor.length ? (\r\n                    <div className=\"rankChart\">\r\n                        {sortedDoctor.map((doc) => (\r\n                            <div className=\"rankRow\">\r\n                                <span className=\"rankPosition\">\r\n                                    {position++}\r\n                                </span>\r\n                                <img\r\n                                    src={\r\n                                        doc?.profilePicture\r\n                                            ? doc.profilePicture\r\n                                            : PF + \"/person/noAvatar.png\"\r\n                                    }\r\n                                    alt=\"\"\r\n                                    className=\"rankAvatar\"\r\n                                />\r\n                                <span className=\"rankName\">{doc.username}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    \"No Doctors\"\r\n                )}\r\n                \r\n            {/* </div> */}\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";AAAA,OAAO,eAAP;;;AAEA,eAAe,SAASA,OAAT,OAAiC;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC5C,MAAMC,EAAE,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAvB;;EACA,MAAMC,MAAM,GAAIC,IAAD,IAAU;IACrB,MAAMD,MAAM,GAAGC,IAAI,CAACC,IAAL,CAAU,CAACC,IAAD,EAAOC,IAAP,KAAgBA,IAAI,CAACC,MAAL,GAAcF,IAAI,CAACE,MAA7C,CAAf;IACA,IAAIC,GAAG,GAAG,CAAV;IACA,MAAMC,GAAG,GAAG,EAAZ;;IACA,OAAOD,GAAG,GAAG,EAAN,IAAYA,GAAG,GAAGN,MAAM,CAACQ,MAAhC,EAAwCD,GAAG,CAACE,IAAJ,CAAST,MAAM,CAACM,GAAG,EAAJ,CAAf;;IACxC,OAAOC,GAAP;EACH,CAND;;EAOA,MAAMG,YAAY,GAAGV,MAAM,CAACL,UAAD,CAA3B;EACA,IAAIgB,QAAQ,GAAG,CAAf;EAEA,oBACI;IAAA,UAESD,YAAY,CAACF,MAAb,gBACG;MAAK,SAAS,EAAC,WAAf;MAAA,UACKE,YAAY,CAACE,GAAb,CAAkBC,GAAD,iBACd;QAAK,SAAS,EAAC,SAAf;QAAA,wBACI;UAAM,SAAS,EAAC,cAAhB;UAAA,UACKF,QAAQ;QADb;UAAA;UAAA;UAAA;QAAA,QADJ,eAII;UACI,GAAG,EACCE,GAAG,SAAH,IAAAA,GAAG,WAAH,IAAAA,GAAG,CAAEC,cAAL,GACMD,GAAG,CAACC,cADV,GAEMlB,EAAE,GAAG,sBAJnB;UAMI,GAAG,EAAC,EANR;UAOI,SAAS,EAAC;QAPd;UAAA;UAAA;UAAA;QAAA,QAJJ,eAaI;UAAM,SAAS,EAAC,UAAhB;UAAA,UAA4BiB,GAAG,CAACE;QAAhC;UAAA;UAAA;UAAA;QAAA,QAbJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QADH,GAqBG;EAvBZ,iBADJ;AA8BH;KA1CuBrB,O"},"metadata":{},"sourceType":"module"}