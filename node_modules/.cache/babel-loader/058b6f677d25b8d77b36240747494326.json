{"ast":null,"code":"var _jsxFileName = \"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/DoctorNow/client/src/pages/calendar/Calendar.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport dayjs from \"dayjs\";\nimport range from \"lodash-es/range\";\nimport \"./calendar.css\";\nimport Navbar from \"../../components/navbar/Navbar\";\nimport DayPicker from \"../../components/dayPicker/DayPicker\";\nimport axios from \"axios\"; // const weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst timesOfDay = [\"08:00\", \"08:30\", \"09:00\", \"09:30\", \"10:00\", \"10:30\", \"11:00\", \"11:30\", \"12:00\", \"12:30\", \"13:00\", \"13:30\", \"14:00\", \"14:30\", \"15:00\", \"15:30\", \"16:00\", \"16:30\", \"17:00\", \"17:30\", \"18:00\", \"18:30\", \"19:00\", \"19:30\", \"20:00\", \"20:30\", \"21:00\", \"21:30\"]; // const todayObj = dayjs();\n\nexport default function Calendar() {\n  _s();\n\n  const viewusername = useParams().username;\n  const [viewuser, setViewuser] = useState(); // const [dayObj, setDayObj] = useState(dayjs());\n\n  const [appsDoctor, setAppsDoctor] = useState([]); // const [hasSelected, setHasSelected] = useState(false);\n  // const thisYear = dayObj.year();\n  // const thisMonth = dayObj.month();\n  // const daysInMonth = dayObj.daysInMonth();\n  // const dayObjOf1 = dayjs(`${thisYear}-${thisMonth + 1}-1`);\n  // const weekDayOf1 = dayObjOf1.day();\n  // const dayObjOfLast = dayjs(`${thisYear}-${thisMonth + 1}-${daysInMonth}`);\n  // const weekDayOfLast = dayObjOfLast.day();\n  // const handlePrev = () => {\n  //     setDayObj(dayObj.subtract(1, \"month\"));\n  // };\n  // const handleNext = () => {\n  //     setDayObj(dayObj.add(1, \"month\"));\n  // };\n\n  useEffect(() => {\n    const fetchViewuser = async () => {\n      const user = await axios.get(`/doctors?doctorname=${viewusername}`);\n      console.log(user.data);\n      setViewuser(user.data);\n    };\n\n    fetchViewuser();\n  }, [viewusername]);\n  useEffect(() => {\n    const fetchAppsDoctor = async () => {\n      const appsForDoctor = await axios.get(`/appointments/${viewuser._id}`);\n      console.log(appsForDoctor.data);\n      setAppsDoctor(appsForDoctor.data);\n    };\n\n    fetchAppsDoctor();\n  }, [viewuser]); // const handleDaySelect = (e) => {\n  //     e.preventDefault();\n  //     const s = document.querySelectorAll(\".selected\");\n  //     for (const d of s) d.classList.remove(\"selected\");\n  //     e.target.classList.add(\"selected\");\n  //     setDayObj(dayObj.set(\"date\", e.target.textContent));\n  // };\n  // const handleTimeSelect = (e) => {\n  //     e.preventDefault();\n  //     const s = document.querySelectorAll(\".time-selected\");\n  //     for (const d of s) d.classList.remove(\"time-selected\");\n  //     e.target.classList.add(\"time-selected\");\n  //     setDayObj(\n  //         dayObj\n  //             .set(\"hour\", e.target.textContent.substring(0, 2))\n  //             .set(\"minute\", e.target.textContent.substring(3))\n  //     );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarWrapper\",\n      children: /*#__PURE__*/_jsxDEV(DayPicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Calendar, \"HsIsq7h1m64nOomJkuVCOoWenhM=\", false, function () {\n  return [useParams];\n});\n\n_c = Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["useState","useEffect","useParams","dayjs","range","Navbar","DayPicker","axios","timesOfDay","Calendar","viewusername","username","viewuser","setViewuser","appsDoctor","setAppsDoctor","fetchViewuser","user","get","console","log","data","fetchAppsDoctor","appsForDoctor","_id"],"sources":["/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/DoctorNow/client/src/pages/calendar/Calendar.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport dayjs from \"dayjs\";\nimport range from \"lodash-es/range\";\nimport \"./calendar.css\";\nimport Navbar from \"../../components/navbar/Navbar\";\nimport DayPicker from \"../../components/dayPicker/DayPicker\";\nimport axios from \"axios\";\n\n// const weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst timesOfDay = [\n    \"08:00\",\n    \"08:30\",\n    \"09:00\",\n    \"09:30\",\n    \"10:00\",\n    \"10:30\",\n    \"11:00\",\n    \"11:30\",\n    \"12:00\",\n    \"12:30\",\n    \"13:00\",\n    \"13:30\",\n    \"14:00\",\n    \"14:30\",\n    \"15:00\",\n    \"15:30\",\n    \"16:00\",\n    \"16:30\",\n    \"17:00\",\n    \"17:30\",\n    \"18:00\",\n    \"18:30\",\n    \"19:00\",\n    \"19:30\",\n    \"20:00\",\n    \"20:30\",\n    \"21:00\",\n    \"21:30\",\n];\n// const todayObj = dayjs();\n\nexport default function Calendar() {\n    const viewusername = useParams().username;\n    const[viewuser, setViewuser] = useState();\n\n    // const [dayObj, setDayObj] = useState(dayjs());\n    const [appsDoctor, setAppsDoctor] = useState([]);\n    // const [hasSelected, setHasSelected] = useState(false);\n\n    // const thisYear = dayObj.year();\n    // const thisMonth = dayObj.month();\n    // const daysInMonth = dayObj.daysInMonth();\n\n    // const dayObjOf1 = dayjs(`${thisYear}-${thisMonth + 1}-1`);\n    // const weekDayOf1 = dayObjOf1.day();\n\n    // const dayObjOfLast = dayjs(`${thisYear}-${thisMonth + 1}-${daysInMonth}`);\n    // const weekDayOfLast = dayObjOfLast.day();\n\n    // const handlePrev = () => {\n    //     setDayObj(dayObj.subtract(1, \"month\"));\n    // };\n\n    // const handleNext = () => {\n    //     setDayObj(dayObj.add(1, \"month\"));\n    // };\n\n    useEffect(()=>{\n        const fetchViewuser = async () => {\n            const user = await axios.get(`/doctors?doctorname=${viewusername}`);\n            console.log(user.data);\n            setViewuser(user.data);\n        }\n        fetchViewuser();\n    }, [viewusername]);\n\n    useEffect(() => {\n        const fetchAppsDoctor = async () => {\n            const appsForDoctor = await axios.get(\n                `/appointments/${viewuser._id}`\n            );\n            console.log(appsForDoctor.data);\n            setAppsDoctor(appsForDoctor.data);\n        };\n        fetchAppsDoctor();\n    }, [viewuser]);\n\n    // const handleDaySelect = (e) => {\n    //     e.preventDefault();\n    //     const s = document.querySelectorAll(\".selected\");\n    //     for (const d of s) d.classList.remove(\"selected\");\n    //     e.target.classList.add(\"selected\");\n    //     setDayObj(dayObj.set(\"date\", e.target.textContent));\n    // };\n\n    // const handleTimeSelect = (e) => {\n    //     e.preventDefault();\n    //     const s = document.querySelectorAll(\".time-selected\");\n    //     for (const d of s) d.classList.remove(\"time-selected\");\n    //     e.target.classList.add(\"time-selected\");\n    //     setDayObj(\n    //         dayObj\n    //             .set(\"hour\", e.target.textContent.substring(0, 2))\n    //             .set(\"minute\", e.target.textContent.substring(3))\n    //     );\n    // };\n\n    return (\n        <>\n            <Navbar />\n            <div className=\"calendarWrapper\">\n                {/* <div className=\"header\">\n                    <button\n                        type=\"button\"\n                        className=\"nav nav--prev\"\n                        onClick={handlePrev}\n                    >\n                        Back\n                    </button>\n                    <div className=\"datetime\">\n                        {dayObj.format(\"MMM DD YYYY HH:mm\")}\n                    </div>\n                    <button\n                        type=\"button\"\n                        className=\"nav nav--prev\"\n                        onClick={handleNext}\n                    >\n                        Next\n                    </button>\n                </div>\n                <div className=\"calendar\">\n                    <div className=\"week-container\">\n                        {weekDays.map((d) => (\n                            <div className=\"week-cell\" key={d}>\n                                {d}\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"day-container\">\n                        {range(weekDayOf1).map((i) => (\n                            <div className=\"day-cell day-cell--faded\" key={i}>\n                                {dayObjOf1\n                                    .subtract(weekDayOf1 - i, \"day\")\n                                    .date()}\n                            </div>\n                        ))}\n\n                        {range(daysInMonth).map((i) => (\n                            <div\n                                className={`day-cell day-cell--in-month${\n                                    i + 1 === todayObj.date() &&\n                                    thisMonth === todayObj.month() &&\n                                    thisYear === todayObj.year()\n                                        ? \" day-cell--today\"\n                                        : \"\"\n                                }`}\n                                key={i}\n                                onClick={handleDaySelect}\n                            >\n                                {i + 1}\n                            </div>\n                        ))}\n\n                        {range(6 - weekDayOfLast).map((i) => (\n                            <div className=\"day-cell day-cell--faded\" key={i}>\n                                {dayObjOfLast.add(i + 1, \"day\").date()}\n                            </div>\n                        ))}\n                    </div>\n                </div> */}\n                <DayPicker />\n                {/* <div className=\"timePicker\">\n                    {timesOfDay.map((t) => (\n                        <div\n                            className=\"time-cell\"\n                            key={t}\n                            onClick={handleTimeSelect}\n                        >\n                            {t}\n                        </div>\n                    ))}\n                </div> */}\n            </div>\n        </>\n    );\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,MAAMC,UAAU,GAAG,CACf,OADe,EAEf,OAFe,EAGf,OAHe,EAIf,OAJe,EAKf,OALe,EAMf,OANe,EAOf,OAPe,EAQf,OARe,EASf,OATe,EAUf,OAVe,EAWf,OAXe,EAYf,OAZe,EAaf,OAbe,EAcf,OAde,EAef,OAfe,EAgBf,OAhBe,EAiBf,OAjBe,EAkBf,OAlBe,EAmBf,OAnBe,EAoBf,OApBe,EAqBf,OArBe,EAsBf,OAtBe,EAuBf,OAvBe,EAwBf,OAxBe,EAyBf,OAzBe,EA0Bf,OA1Be,EA2Bf,OA3Be,EA4Bf,OA5Be,CAAnB,C,CA8BA;;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EAC/B,MAAMC,YAAY,GAAGR,SAAS,GAAGS,QAAjC;EACA,MAAK,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,EAAvC,CAF+B,CAI/B;;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C,CAL+B,CAM/B;EAEA;EACA;EACA;EAEA;EACA;EAEA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAI;IACV,MAAMe,aAAa,GAAG,YAAY;MAC9B,MAAMC,IAAI,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,uBAAsBR,YAAa,EAA9C,CAAnB;MACAS,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB;MACAR,WAAW,CAACI,IAAI,CAACI,IAAN,CAAX;IACH,CAJD;;IAKAL,aAAa;EAChB,CAPQ,EAON,CAACN,YAAD,CAPM,CAAT;EASAT,SAAS,CAAC,MAAM;IACZ,MAAMqB,eAAe,GAAG,YAAY;MAChC,MAAMC,aAAa,GAAG,MAAMhB,KAAK,CAACW,GAAN,CACvB,iBAAgBN,QAAQ,CAACY,GAAI,EADN,CAA5B;MAGAL,OAAO,CAACC,GAAR,CAAYG,aAAa,CAACF,IAA1B;MACAN,aAAa,CAACQ,aAAa,CAACF,IAAf,CAAb;IACH,CAND;;IAOAC,eAAe;EAClB,CATQ,EASN,CAACV,QAAD,CATM,CAAT,CAnC+B,CA8C/B;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,iBAAf;MAAA,uBA4DI,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA;IA5DJ;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AA8EH;;GAhJuBH,Q;UACCP,S;;;KADDO,Q"},"metadata":{},"sourceType":"module"}