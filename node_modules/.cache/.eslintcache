[{"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/index.js":"1","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/App.js":"2","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/context/AuthContext.js":"3","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/context/AuthReducer.js":"4","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/login/Login.jsx":"5","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/calendar/Calendar.jsx":"6","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/home/Home.jsx":"7","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/profile/Profile.jsx":"8","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/register/Register.jsx":"9","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/PatientProfilePage/PatientProfilePage.js":"10","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/TodoPage/TodoPage.js":"11","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/apiCalls.js":"12","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/ranking/Ranking.jsx":"13","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/reviewCard/ReviewCard.jsx":"14","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/userCard/UserCard.jsx":"15","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/navbar/Navbar.jsx":"16","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/PatientProfile/PatientForm.js":"17","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/Todo/TodoParent.js":"18","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/PatientProfile/PatientShow.js":"19","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/Todo/TodoForm.js":"20","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/Todo/TodoChilden.js":"21","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/blog/DetailBlog.jsx":"22","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/blog/Blog.jsx":"23"},{"size":409,"mtime":1661242267463,"results":"24","hashOfConfig":"25"},{"size":1798,"mtime":1662345715270,"results":"26","hashOfConfig":"27"},{"size":822,"mtime":1660028214702,"results":"28","hashOfConfig":"25"},{"size":642,"mtime":1660028214702,"results":"29","hashOfConfig":"25"},{"size":3100,"mtime":1662172420274,"results":"30","hashOfConfig":"25"},{"size":9499,"mtime":1662101419402,"results":"31","hashOfConfig":"25"},{"size":4674,"mtime":1662345200531,"results":"32","hashOfConfig":"27"},{"size":5391,"mtime":1662345910888,"results":"33","hashOfConfig":"27"},{"size":5791,"mtime":1660708589452,"results":"34","hashOfConfig":"25"},{"size":400,"mtime":1662281670309,"results":"35","hashOfConfig":"25"},{"size":295,"mtime":1661242267464,"results":"36","hashOfConfig":"25"},{"size":698,"mtime":1660028728583,"results":"37","hashOfConfig":"25"},{"size":1630,"mtime":1660028214701,"results":"38","hashOfConfig":"25"},{"size":3254,"mtime":1660028214701,"results":"39","hashOfConfig":"25"},{"size":2753,"mtime":1662347382393,"results":"40","hashOfConfig":"27"},{"size":1939,"mtime":1662349040217,"results":"41","hashOfConfig":"27"},{"size":3108,"mtime":1662281655989,"results":"42","hashOfConfig":"25"},{"size":1877,"mtime":1662344885499,"results":"43","hashOfConfig":"27"},{"size":2245,"mtime":1662281665617,"results":"44","hashOfConfig":"25"},{"size":1965,"mtime":1661242267463,"results":"45","hashOfConfig":"25"},{"size":1300,"mtime":1661242267463,"results":"46","hashOfConfig":"25"},{"size":6699,"mtime":1662344781414,"results":"47","hashOfConfig":"25"},{"size":4977,"mtime":1662344781414,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o1ojr1",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1taw0dc",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/index.js",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/App.js",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/context/AuthContext.js",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/context/AuthReducer.js",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/login/Login.jsx",["123","124","125"],[],"import \"./login.css\";\nimport Navbar from \"../../components/navbar/Navbar\";\nimport { useContext, useRef } from \"react\";\nimport { loginCallCustomer, loginCallDoctor } from \"../../apiCalls\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Login() {\n    const email = useRef();\n    const password = useRef();\n    const { user, isFetching, error, dispatch } = useContext(AuthContext);\n\n    const handleClickCustomer = (e) => {\n        e.preventDefault();\n        loginCallCustomer(\n            { email: email.current.value, password: password.current.value },\n            dispatch\n        );\n    };\n    const handleClickDoctor = (e) => {\n        e.preventDefault();\n        loginCallDoctor(\n            { email: email.current.value, password: password.current.value },\n            dispatch\n        );\n    };\n    return (\n        <>\n            <Navbar />\n            <div className=\"login\">\n                <div className=\"loginTop\">\n                    <div className=\"loginLeft\">\n                        <div className=\"title\">\n                            Sign in for further benefits and information.\n                        </div>\n                        <form className=\"form\">\n                            <span className=\"label\">Email</span>\n                            <input\n                                placeholder=\"youremail@gmail.com\"\n                                type=\"email\"\n                                className=\"input\"\n                                ref={email}\n                                required\n                            />\n                            <span className=\"label\">Password</span>\n                            <input\n                                placeholder=\"******\"\n                                type=\"password\"\n                                className=\"input\"\n                                ref={password}\n                                required\n                            />\n                            <div className=\"choices\">\n                                <button\n                                    className=\"loginButton\"\n                                    type=\"submit\"\n                                    onClick={handleClickCustomer}\n                                >\n                                    <span className=\"loginText\">Customer</span>\n                                </button>\n                                <button\n                                    className=\"loginButton\"\n                                    type=\"submit\"\n                                    onClick={handleClickDoctor}\n                                >\n                                    <span className=\"loginText\">Doctor</span>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"loginRight\">\n                        <div className=\"background\"></div>\n                    </div>\n                </div>\n                <div className=\"loginBottom\"></div>\n            </div>\n        </>\n    );\n}\n","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/calendar/Calendar.jsx",["126"],[],"import { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport dayjs from \"dayjs\";\nimport range from \"lodash-es/range\";\nimport \"./calendar.css\";\nimport Navbar from \"../../components/navbar/Navbar\"; import axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nconst toArray = require(\"dayjs/plugin/toArray\");\ndayjs.extend(toArray);\n\nconst weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst timesOfDay = [\n    \"08:00\",\n    \"08:30\",\n    \"09:00\",\n    \"09:30\",\n    \"10:00\",\n    \"10:30\",\n    \"11:00\",\n    \"11:30\",\n    \"12:00\",\n    \"12:30\",\n    \"13:00\",\n    \"13:30\",\n    \"14:00\",\n    \"14:30\",\n    \"15:00\",\n    \"15:30\",\n    \"16:00\",\n    \"16:30\",\n    \"17:00\",\n    \"17:30\",\n    \"18:00\",\n    \"18:30\",\n    \"19:00\",\n    \"19:30\",\n    \"20:00\",\n    \"20:30\",\n    \"21:00\",\n    \"21:30\",\n];\nconst todayObj = dayjs();\nexport default function Calendar() {\n    const viewusername = useParams().username;\n    const [viewuser, setViewuser] = useState();\n    const { user: currentUser } = useContext(AuthContext);\n\n    const [appsDoctor, setAppsDoctor] = useState([]);\n    const [busyTimesOfDay, setBusyTimesOfDay] = useState([]);\n\n    const [dayObj, setDayObj] = useState(dayjs());\n    const [dummyDay, setDummyDay] = useState(dayjs());\n    const thisYear = dayObj.year();\n    const thisMonth = dayObj.month();\n    const daysInMonth = dayObj.daysInMonth();\n    const dayObjOf1 = dayjs(`${thisYear}-${thisMonth + 1}-1`);\n    const weekDayOf1 = dayObjOf1.day();\n    const dayObjOfLast = dayjs(`${thisYear}-${thisMonth + 1}-${daysInMonth}`);\n    const weekDayOfLast = dayObjOfLast.day();\n\n    const handlePrev = () => {\n        setDayObj(dayObj.subtract(1, \"month\"));\n        setDummyDay(dummyDay.subtract(1, \"month\"));\n    };\n\n    const handleNext = () => {\n        setDayObj(dayObj.add(1, \"month\"));\n        setDummyDay(dummyDay.add(1, \"month\"));\n    };\n\n    const handleBooking = async (e) => {\n        e.preventDefault();\n        const dayArr = dayObj.toArray(); // [year, month, day, minute, second]\n        console.log(dayArr);\n        // const bookingStartDate = new Date(dayArr[0], dayArr[1], dayArr[2], dayArr[3], dayArr[4]);\n        const bookingStartDate =\n            (dayArr[1] + 1).toString() +\n            \"-\" +\n            dayArr[2].toString() +\n            \"-\" +\n            dayArr[0].toString() +\n            \" \" +\n            dayArr[3].toString() +\n            \":\" +\n            dayArr[4].toString();\n        console.log(bookingStartDate);\n        if (dayArr[4] === 30) {\n            dayArr[3]++;\n            dayArr[4] = 0;\n        }\n        const bookingEndDate =\n            (dayArr[1] + 1).toString() +\n            \"-\" +\n            dayArr[2].toString() +\n            \"-\" +\n            dayArr[0].toString() +\n            \" \" +\n            dayArr[3].toString() +\n            \":\" +\n            dayArr[4].toString();\n        const newAppointment = {\n            doctorId: viewuser._id,\n            customerId: currentUser._id,\n            bookingStartDate: bookingStartDate,\n            bookingEndDate: bookingEndDate,\n        };\n        try {\n            await axios.post(\"/appointments/booking\", newAppointment);\n            window.location.reload();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    useEffect(() => {\n        const fetchViewuser = async () => {\n            const user = await axios.get(`/doctors?doctorname=${viewusername}`);\n            console.log(user.data);\n            setViewuser(user.data);\n        };\n        fetchViewuser();\n    }, [viewusername]);\n\n    useEffect(() => {\n        const fetchAppsDoctor = async () => {\n            const appsForDoctor = await axios.get(\n                `/appointments/${viewuser._id}`\n            );\n            setAppsDoctor(appsForDoctor.data);\n        };\n        fetchAppsDoctor();\n    }, [viewuser]);\n\n    const handleDaySelect = (e) => {\n        e.preventDefault();\n        const s = document.querySelectorAll(\".selected\");\n        for (const d of s) d.classList.remove(\"selected\");\n        e.target.classList.add(\"selected\");\n        setDayObj(dayObj.set(\"date\", e.target.textContent));\n        setDummyDay(dummyDay.set(\"date\", e.target.textContent));\n    };\n\n    const handleTimeSelect = (e) => {\n        e.preventDefault();\n        if (!busyTimesOfDay.includes(e.target.textContent)) {\n            const s = document.querySelectorAll(\".time-selected\");\n            for (const d of s) d.classList.remove(\"time-selected\");\n            e.target.classList.add(\"time-selected\");\n            setDayObj(\n                dayObj\n                    .set(\"hour\", e.target.textContent.substring(0, 2))\n                    .set(\"minute\", e.target.textContent.substring(3))\n            );\n        } else {\n            alert(\n                \"Very sorry, the Doctor is busy for this time! Please choose another time\"\n            );\n        }\n    };\n\n    const checkBusyTimesInDay = (day, apps) => {\n        const busyTimes = [];\n        for (const app of apps) {\n            const temp = dayjs(app.bookingStartDate);\n            if (day.isSame(temp, \"day\")) {\n                for (const time of timesOfDay) {\n                    if (\n                        parseInt(time.substring(0, 2)) === temp.get(\"hour\") &&\n                        parseInt(time.substring(3)) === temp.get(\"minute\")\n                    )\n                        busyTimes.push(time);\n                }\n            }\n        }\n        console.log(busyTimes);\n        return busyTimes;\n    };\n\n    useEffect(() => {\n        setBusyTimesOfDay(checkBusyTimesInDay(dummyDay, appsDoctor));\n    }, [dummyDay]);\n\n    return (\n        <>\n            <Navbar />\n            <div className=\"calendarWrapper\">\n                <div className=\"header\">\n                    <button\n                        type=\"button\"\n                        className=\"nav nav--prev\"\n                        onClick={handlePrev}\n                    >\n                        Back\n                    </button>\n                    <div className=\"datetime\">\n                        {dayObj.format(\"MMM DD YYYY HH:mm\")}\n                    </div>\n                    <button\n                        type=\"button\"\n                        className=\"nav nav--prev\"\n                        onClick={handleNext}\n                    >\n                        Next\n                    </button>\n                </div>\n                <div className=\"calendar\">\n                    <div className=\"week-container\">\n                        {weekDays.map((d) => (\n                            <div className=\"week-cell\" key={d}>\n                                {d}\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"day-container\">\n                        {range(weekDayOf1).map((i) => (\n                            <div className=\"day-cell day-cell--faded\" key={i}>\n                                {dayObjOf1\n                                    .subtract(weekDayOf1 - i, \"day\")\n                                    .date()}\n                            </div>\n                        ))}\n\n                        {range(daysInMonth).map((i) => (\n                            <div\n                                className={`day-cell day-cell--in-month${\n                                    i + 1 === todayObj.date() &&\n                                    thisMonth === todayObj.month() &&\n                                    thisYear === todayObj.year()\n                                        ? \" day-cell--today\"\n                                        : \"\"\n                                }`}\n                                key={i}\n                                onClick={handleDaySelect}\n                            >\n                                {i + 1}\n                            </div>\n                        ))}\n\n                        {range(6 - weekDayOfLast).map((i) => (\n                            <div className=\"day-cell day-cell--faded\" key={i}>\n                                {dayObjOfLast.add(i + 1, \"day\").date()}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <div className=\"timePicker\">\n                    {timesOfDay.map((t) => {\n                        if (busyTimesOfDay.includes(t))\n                            return (\n                                <div\n                                    className=\"time-cell busyTime\"\n                                    key={t}\n                                    onClick={handleTimeSelect}\n                                >\n                                    {t}\n                                </div>\n                            );\n                        else\n                            return (\n                                <div\n                                    className=\"time-cell\"\n                                    key={t}\n                                    onClick={handleTimeSelect}\n                                >\n                                    {t}\n                                </div>\n                            );\n                    })}\n                </div>\n                <div className=\"bookNowContain\">\n                    <button className=\"bookNowBtn\" onClick={handleBooking}>\n                        <span className=\"bookNowText\">Book now</span>\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n}\n","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/home/Home.jsx",["127","128","129","130"],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/profile/Profile.jsx",["131","132","133"],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/register/Register.jsx",["134"],[],"import \"./register.css\";\nimport { useRef } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../components/navbar/Navbar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Register() {\n    const username = useRef();\n    const email = useRef();\n    const password = useRef();\n    const passwordAgain = useRef();\n    const phone = useRef();\n    const idnumber = useRef();\n    const navigate = useNavigate();\n\n    const handleClickCustomer = async (e) => {\n        e.preventDefault();\n        if (passwordAgain.current.value !== password.current.value) {\n            passwordAgain.current.setCustomValidity(\"Passwords don't match!\");\n        } else {\n            const user = {\n                username: username.current.value,\n                email: email.current.value,\n                password: password.current.value,\n                phoneNumber: phone.current.value,\n                idNumber: idnumber.current.value,\n            };\n            try {\n                await axios.post(\"/customers/register\", user);\n                navigate(\"/login\");\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n    const handleClickDoctor = async (e) => {\n        e.preventDefault();\n        if (passwordAgain.current.value !== password.current.value) {\n            passwordAgain.current.setCustomValidity(\"Passwords don't match!\");\n        } else {\n            const user = {\n                username: username.current.value,\n                email: email.current.value,\n                password: password.current.value,\n                phoneNumber: phone.current.value,\n                idNumber: idnumber.current.value,\n            };\n            try {\n                await axios.post(\"/doctors/register\", user);\n                navigate(\"/login\");\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    return (\n        <>\n            <Navbar />\n            <div className=\"login\">\n                <div className=\"loginTop\">\n                    <div className=\"loginLeft\">\n                        <div className=\"title\">\n                            Register an account for further benefits and\n                            information.\n                        </div>\n                        <form className=\"form\">\n                            <span className=\"label\">Email</span>\n                            <input\n                                placeholder=\"youremail@gmail.com\"\n                                type=\"email\"\n                                className=\"input\"\n                                ref={email}\n                                required\n                            />\n                            <span className=\"label\">Username</span>\n                            <input\n                                placeholder=\"your username\"\n                                type=\"username\"\n                                className=\"input\"\n                                ref={username}\n                                required\n                            />\n                            <span className=\"label\">Password</span>\n                            <input\n                                placeholder=\"******\"\n                                type=\"password\"\n                                className=\"input\"\n                                ref={password}\n                                required\n                            />\n                            <span className=\"label\">Password again</span>\n                            <input\n                                placeholder=\"******\"\n                                type=\"password\"\n                                className=\"input\"\n                                ref={passwordAgain}\n                                required\n                            />\n                            <span className=\"label\">Phone number</span>\n                            <input\n                                placeholder=\"84+ 34086256\"\n                                type=\"phoneNumber\"\n                                className=\"input\"\n                                ref={phone}\n                                required\n                            />\n                            <span className=\"label\">ID number</span>\n                            <input\n                                placeholder=\"Your national ID\"\n                                type=\"idNumber\"\n                                className=\"input\"\n                                ref={idnumber}\n                                required\n                            />\n                            <div className=\"choices\">\n                                <button\n                                    className=\"loginButton\"\n                                    type=\"submit\"\n                                    onClick={handleClickCustomer}\n                                >\n                                    <span className=\"loginText\">Customer</span>\n                                </button>\n                                <button\n                                    className=\"loginButton\"\n                                    type=\"submit\"\n                                    onClick={handleClickDoctor}\n                                >\n                                    <span className=\"loginText\">Doctor</span>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"loginRight\">\n                        <div className=\"background\"></div>\n                    </div>\n                </div>\n                <div className=\"loginBottom\"></div>\n            </div>\n        </>\n    );\n}\n","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/PatientProfilePage/PatientProfilePage.js",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/pages/TodoPage/TodoPage.js",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/apiCalls.js",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/ranking/Ranking.jsx",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/reviewCard/ReviewCard.jsx",["135"],[],"import \"./reviewCard.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst delay = 2500;\n\nexport default function ReviewCard({ user }) {\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n    const [index, setIndex] = useState(0);\n    const [reviews, setReviews] = useState([]);\n    const timeoutRef = useRef(null);\n\n    const resetTimeout = () => {\n        if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n        }\n    };\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            let res = [];\n            for (const id of user.reviews) {\n                const obj = await axios.get(`/reviews/get?reviewId=${id}`);\n                const cus = await axios.get(\n                    `/customers?customername=${obj.data.customerName}`\n                );\n                res = [...res, [cus.data, obj.data]];\n            }\n            setReviews(res);\n        };\n        fetchReviews();\n    }, [user.reviews]);\n\n    useEffect(() => {\n        resetTimeout();\n        timeoutRef.current = setTimeout(\n            () =>\n                setIndex((prevIndex) =>\n                    prevIndex === reviews.length - 1 ? 0 : prevIndex + 1\n                ),\n            delay\n        );\n\n        return () => {\n            resetTimeout();\n        };\n    }, [index]);\n\n    return (\n        <div className=\"slideshow\">\n            <div\n                className=\"slideshowSlider\"\n                style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\n            >\n                {reviews.length &&\n                    reviews.map((r, index) => {\n                        return (\n                            <div className=\"slide\" key={index}>\n                                <div className=\"slideLeft\">\n                                    <img\n                                        src={\n                                            user?.profilePicture\n                                                ? PF + r[0].profilePicture\n                                                : PF + \"person/noAvatar.png\"\n                                        }\n                                        alt=\"\"\n                                        className=\"reviewAvatar\"\n                                    />\n                                    <div className=\"reviewUserName\">\n                                        {r[0].username}\n                                    </div>\n                                </div>\n                                <div className=\"slideRight\">\n                                    <p className=\"reviewPara\">{r[1].desc}</p>\n                                </div>\n                            </div>\n                        );\n                    })}\n            </div>\n\n            <div className=\"slideshowDots\">\n                {reviews.map((_, idx) => (\n                    <div\n                        key={idx}\n                        className={`slideshowDot${\n                            index === idx ? \" active\" : \"\"\n                        }`}\n                        onClick={() => {\n                            setIndex(idx);\n                        }}\n                    ></div>\n                ))}\n            </div>\n        </div>\n    );\n}\n","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/userCard/UserCard.jsx",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/navbar/Navbar.jsx",["136","137","138","139"],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/PatientProfile/PatientForm.js",["140"],[],"import React, { useState } from \"react\";\n\nexport default function PatientForm() {\n  \n    const [patient, setPatient] = useState(\n        {\n            id: '',\n            name: '',\n            gender: '',\n            age: '',\n            height: '',\n            blood: '',\n            note: ''\n        }\n    )\n  \n    return (\n        <>\n            <div className=\"row justify-content-center\">\n                <form className=\"col-6\">\n                    <div className=\"row\">\n                        <div className=\"mb-3 col-2\">\n                            <label htmlFor=\"name\" className=\"form-label\">ID:</label>\n                            <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"...\" disabled/>\n                        </div>\n                        <div className=\"mb-3 col-6\">\n                            <label htmlFor=\"name\" className=\"form-label\">Name:</label>\n                            <input type=\"text\" className=\"form-control\" id=\"name\"/>\n                        </div>\n                        <div className=\"mb-3 col-4\">\n                            <label htmlFor=\"gender\" className=\"form-label\">Gender:</label>\n                            <select className=\"form-select\">\n                                <option value=\"male\">Male</option>\n                                <option value=\"female\">Female</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"mb-3 col\">\n                            <label htmlFor=\"age\" className=\"form-label\">Age:</label>\n                            <input type=\"text\" className=\"form-control\" id=\"age\"/>\n                        </div>\n                        <div className=\"mb-3 col\">\n                            <label htmlFor=\"height\" className=\"form-label\">Height:</label>\n                            <input type=\"text\" className=\"form-control\" id=\"height\"/>\n                        </div>\n                        <div className=\"mb-3 col\">\n                            <label htmlFor=\"blood\" className=\"form-label\">Blood:</label>\n                            <select className=\"form-select\">\n                                <option value=\"a\">A</option>\n                                <option value=\"b\">B</option>\n                                <option value=\"ab\">AB</option>\n                                <option value=\"o\">O</option>\n                            </select>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"mb-3 col-12\">\n                                <label htmlFor=\"notes\" className=\"form-label\">Patient notes:</label>\n                                <textarea className=\"form-control\" id=\"notes\" rows=\"3\"></textarea>\n                            </div>\n                        </div>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n                <div>{patient.name}</div>\n            </div>\n        </>\n\n    );\n}\n","/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/Todo/TodoParent.js",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/PatientProfile/PatientShow.js",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/Todo/TodoForm.js",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/Todo/TodoChilden.js",[],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/blog/DetailBlog.jsx",["141","142","143","144"],[],"/Users/tamkieu/Desktop/RMIT/FurtherWeb/GroupAsm/Backup/DoctorNow/client/src/components/blog/Blog.jsx",[],[],{"ruleId":"145","severity":1,"message":"146","line":10,"column":13,"nodeType":"147","messageId":"148","endLine":10,"endColumn":17},{"ruleId":"145","severity":1,"message":"149","line":10,"column":19,"nodeType":"147","messageId":"148","endLine":10,"endColumn":29},{"ruleId":"145","severity":1,"message":"150","line":10,"column":31,"nodeType":"147","messageId":"148","endLine":10,"endColumn":36},{"ruleId":"151","severity":1,"message":"152","line":181,"column":8,"nodeType":"153","endLine":181,"endColumn":18,"suggestions":"154"},{"ruleId":"145","severity":1,"message":"155","line":3,"column":22,"nodeType":"147","messageId":"148","endLine":3,"endColumn":28},{"ruleId":"145","severity":1,"message":"156","line":8,"column":10,"nodeType":"147","messageId":"148","endLine":8,"endColumn":14},{"ruleId":"145","severity":1,"message":"157","line":9,"column":8,"nodeType":"147","messageId":"148","endLine":9,"endColumn":12},{"ruleId":"145","severity":1,"message":"158","line":11,"column":7,"nodeType":"147","messageId":"148","endLine":11,"endColumn":19},{"ruleId":"145","severity":1,"message":"155","line":4,"column":43,"nodeType":"147","messageId":"148","endLine":4,"endColumn":49},{"ruleId":"145","severity":1,"message":"159","line":17,"column":15,"nodeType":"147","messageId":"148","endLine":17,"endColumn":30},{"ruleId":"145","severity":1,"message":"160","line":19,"column":15,"nodeType":"147","messageId":"148","endLine":19,"endColumn":28},{"ruleId":"145","severity":1,"message":"156","line":6,"column":10,"nodeType":"147","messageId":"148","endLine":6,"endColumn":14},{"ruleId":"151","severity":1,"message":"161","line":47,"column":8,"nodeType":"153","endLine":47,"endColumn":15,"suggestions":"162"},{"ruleId":"145","severity":1,"message":"163","line":4,"column":22,"nodeType":"147","messageId":"148","endLine":4,"endColumn":31},{"ruleId":"145","severity":1,"message":"155","line":4,"column":33,"nodeType":"147","messageId":"148","endLine":4,"endColumn":39},{"ruleId":"145","severity":1,"message":"164","line":4,"column":41,"nodeType":"147","messageId":"148","endLine":4,"endColumn":49},{"ruleId":"145","severity":1,"message":"165","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":13},{"ruleId":"145","severity":1,"message":"166","line":5,"column":21,"nodeType":"147","messageId":"148","endLine":5,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":94,"column":56,"nodeType":"169","messageId":"170","endLine":94,"endColumn":58},{"ruleId":"151","severity":1,"message":"171","line":96,"column":7,"nodeType":"153","endLine":96,"endColumn":9,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":110,"column":25,"nodeType":"175","endLine":110,"endColumn":63},{"ruleId":"176","severity":1,"message":"177","line":110,"column":63,"nodeType":"175","endLine":110,"endColumn":175},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'isFetching' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'appsDoctor'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBusyTimesOfDay' needs the current value of 'appsDoctor'.","ArrayExpression",["178"],"'useRef' is defined but never used.","'Link' is defined but never used.","'Blog' is defined but never used.","'fakeDataBlog' is assigned a value but never used.","'handleAddReview' is assigned a value but never used.","'handleBookBtn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'reviews.length'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIndex' needs the current value of 'reviews.length'.",["179"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'setPatient' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["180"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [appsDoctor, dummyDay]",{"range":"187","text":"188"},"Update the dependencies array to be: [index, reviews.length]",{"range":"189","text":"190"},"Update the dependencies array to be: [id]",{"range":"191","text":"192"},[5618,5628],"[appsDoctor, dummyDay]",[1328,1335],"[index, reviews.length]",[3372,3374],"[id]"]