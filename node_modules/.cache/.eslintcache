[{"C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\index.js":"1","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\App.js":"2","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\context\\AuthContext.js":"3","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\context\\AuthReducer.js":"4","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\pages\\login\\Login.jsx":"5","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\pages\\home\\Home.jsx":"6","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\pages\\register\\Register.jsx":"7","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\pages\\profile\\Profile.jsx":"8","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\pages\\calendar\\Calendar.jsx":"9","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\apiCalls.js":"10","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\components\\userCard\\UserCard.jsx":"11","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\components\\ranking\\Ranking.jsx":"12","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\components\\reviewCard\\ReviewCard.jsx":"13","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\components\\navbar\\Navbar.jsx":"14"},{"size":423,"mtime":1660899367716,"results":"15","hashOfConfig":"16"},{"size":1177,"mtime":1660898817020,"results":"17","hashOfConfig":"16"},{"size":851,"mtime":1660898817025,"results":"18","hashOfConfig":"16"},{"size":668,"mtime":1660898817025,"results":"19","hashOfConfig":"16"},{"size":3178,"mtime":1660898817030,"results":"20","hashOfConfig":"16"},{"size":2637,"mtime":1660898817030,"results":"21","hashOfConfig":"16"},{"size":5938,"mtime":1660898817030,"results":"22","hashOfConfig":"16"},{"size":5391,"mtime":1660898817030,"results":"23","hashOfConfig":"16"},{"size":9778,"mtime":1660898817030,"results":"24","hashOfConfig":"16"},{"size":718,"mtime":1660898817020,"results":"25","hashOfConfig":"16"},{"size":2369,"mtime":1660898817025,"results":"26","hashOfConfig":"16"},{"size":1675,"mtime":1660898817020,"results":"27","hashOfConfig":"16"},{"size":3350,"mtime":1660898817025,"results":"28","hashOfConfig":"16"},{"size":782,"mtime":1660898817020,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mq2wbb",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\index.js",[],[],"C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\App.js",[],[],"C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\context\\AuthContext.js",[],[],"C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\context\\AuthReducer.js",[],[],"C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\pages\\login\\Login.jsx",["78","79","80"],[],"import \"./login.css\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport { useContext, useRef } from \"react\";\r\nimport { loginCallCustomer, loginCallDoctor } from \"../../apiCalls\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Login() {\r\n    const email = useRef();\r\n    const password = useRef();\r\n    const { user, isFetching, error, dispatch } = useContext(AuthContext);\r\n\r\n    const handleClickCustomer = (e) => {\r\n        e.preventDefault();\r\n        loginCallCustomer(\r\n            { email: email.current.value, password: password.current.value },\r\n            dispatch\r\n        );\r\n    };\r\n    const handleClickDoctor = (e) => {\r\n        e.preventDefault();\r\n        loginCallDoctor(\r\n            { email: email.current.value, password: password.current.value },\r\n            dispatch\r\n        );\r\n    };\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"login\">\r\n                <div className=\"loginTop\">\r\n                    <div className=\"loginLeft\">\r\n                        <div className=\"title\">\r\n                            Sign in for further benefits and information.\r\n                        </div>\r\n                        <form className=\"form\">\r\n                            <span className=\"label\">Email</span>\r\n                            <input\r\n                                placeholder=\"youremail@gmail.com\"\r\n                                type=\"email\"\r\n                                className=\"input\"\r\n                                ref={email}\r\n                                required\r\n                            />\r\n                            <span className=\"label\">Password</span>\r\n                            <input\r\n                                placeholder=\"******\"\r\n                                type=\"password\"\r\n                                className=\"input\"\r\n                                ref={password}\r\n                                required\r\n                            />\r\n                            <div className=\"choices\">\r\n                                <button\r\n                                    className=\"loginButton\"\r\n                                    type=\"submit\"\r\n                                    onClick={handleClickCustomer}\r\n                                >\r\n                                    <span className=\"loginText\">Customer</span>\r\n                                </button>\r\n                                <button\r\n                                    className=\"loginButton\"\r\n                                    type=\"submit\"\r\n                                    onClick={handleClickDoctor}\r\n                                >\r\n                                    <span className=\"loginText\">Doctor</span>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"loginRight\">\r\n                        <div className=\"background\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"loginBottom\"></div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\pages\\home\\Home.jsx",["81","82"],[],"import \"./home.css\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useContext, useRef, useState, useEffect } from \"react\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport UserCard from \"../../components/userCard/UserCard\";\r\nimport Ranking from \"../../components/ranking/Ranking\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n    const { user } = useContext(AuthContext);\r\n    const [allDoctors, setAllDoctors] = useState([]);\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            const res = await axios.get(\"/doctors/all/\");\r\n            setAllDoctors(res.data);\r\n        };\r\n        fetchUser();\r\n    }, [user._id]);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"homeWrapper\">\r\n                <div className=\"homeTop\">\r\n                    <button className=\"filterBtn daily\">\r\n                        <span className=\"filterBtnText\">Daily</span>\r\n                    </button>\r\n                    <button className=\"filterBtn tips\">\r\n                        <span className=\"filterBtnText\">Tips</span>\r\n                    </button>\r\n                    <button className=\"filterBtn facts\">\r\n                        <span className=\"filterBtnText\">Facts</span>\r\n                    </button>\r\n                    <button className=\"filterBtn rec\">\r\n                        <span className=\"filterBtnText\">Recommend</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"homeBottom\">\r\n                    <div className=\"homeLeft\">\r\n                        {allDoctors.length\r\n                            ? allDoctors.map((doc) => (\r\n                                  <UserCard user={doc} key={doc._id} />\r\n                              ))\r\n                            : \"No Doctors\"}\r\n                    </div>\r\n                    <div className=\"homeRight\">\r\n                        <div className=\"adBanner\">\r\n                            <img\r\n                                src={PF + \"system/ads.jpg\"}\r\n                                alt=\"\"\r\n                                className=\"adImg\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"ranking\">\r\n                            <div className=\"rankTitle\">Best Doctors</div>\r\n                            <Ranking allDoctors={allDoctors} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\pages\\register\\Register.jsx",["83"],[],"import \"./register.css\";\r\nimport { useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Register() {\r\n    const username = useRef();\r\n    const email = useRef();\r\n    const password = useRef();\r\n    const passwordAgain = useRef();\r\n    const phone = useRef();\r\n    const idnumber = useRef();\r\n    const navigate = useNavigate();\r\n    \r\n    const handleClickCustomer = async (e) => {\r\n        e.preventDefault();\r\n        if (passwordAgain.current.value !== password.current.value) {\r\n            passwordAgain.current.setCustomValidity(\"Passwords don't match!\");\r\n        } else {\r\n            const user = {\r\n                username: username.current.value,\r\n                email: email.current.value,\r\n                password: password.current.value,\r\n                phoneNumber: phone.current.value,\r\n                idNumber: idnumber.current.value,\r\n            };\r\n            try {\r\n                await axios.post(\"/customers/register\", user);\r\n                navigate(\"/login\");\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n    const handleClickDoctor = async (e) => {\r\n        e.preventDefault();\r\n        if (passwordAgain.current.value !== password.current.value) {\r\n            passwordAgain.current.setCustomValidity(\"Passwords don't match!\");\r\n        } else {\r\n            const user = {\r\n                username: username.current.value,\r\n                email: email.current.value,\r\n                password: password.current.value,\r\n                phoneNumber: phone.current.value,\r\n                idNumber: idnumber.current.value,\r\n            };\r\n            try {\r\n                await axios.post(\"/doctors/register\", user);\r\n                navigate(\"/login\");\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"login\">\r\n                <div className=\"loginTop\">\r\n                    <div className=\"loginLeft\">\r\n                        <div className=\"title\">\r\n                            Register an account for further benefits and\r\n                            information.\r\n                        </div>\r\n                        <form className=\"form\">\r\n                            <span className=\"label\">Email</span>\r\n                            <input\r\n                                placeholder=\"youremail@gmail.com\"\r\n                                type=\"email\"\r\n                                className=\"input\"\r\n                                ref={email}\r\n                                required\r\n                            />\r\n                            <span className=\"label\">Username</span>\r\n                            <input\r\n                                placeholder=\"your username\"\r\n                                type=\"username\"\r\n                                className=\"input\"\r\n                                ref={username}\r\n                                required\r\n                            />\r\n                            <span className=\"label\">Password</span>\r\n                            <input\r\n                                placeholder=\"******\"\r\n                                type=\"password\"\r\n                                className=\"input\"\r\n                                ref={password}\r\n                                required\r\n                            />\r\n                            <span className=\"label\">Password again</span>\r\n                            <input\r\n                                placeholder=\"******\"\r\n                                type=\"password\"\r\n                                className=\"input\"\r\n                                ref={passwordAgain}\r\n                                required\r\n                            />\r\n                            <span className=\"label\">Phone number</span>\r\n                            <input\r\n                                placeholder=\"84+ 34086256\"\r\n                                type=\"phoneNumber\"\r\n                                className=\"input\"\r\n                                ref={phone}\r\n                                required\r\n                            />\r\n                            <span className=\"label\">ID number</span>\r\n                            <input\r\n                                placeholder=\"Your national ID\"\r\n                                type=\"idNumber\"\r\n                                className=\"input\"\r\n                                ref={idnumber}\r\n                                required\r\n                            />\r\n                            <div className=\"choices\">\r\n                                <button\r\n                                    className=\"loginButton\"\r\n                                    type=\"submit\"\r\n                                    onClick={handleClickCustomer}\r\n                                >\r\n                                    <span className=\"loginText\">Customer</span>\r\n                                </button>\r\n                                <button\r\n                                    className=\"loginButton\"\r\n                                    type=\"submit\"\r\n                                    onClick={handleClickDoctor}\r\n                                >\r\n                                    <span className=\"loginText\">Doctor</span>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"loginRight\">\r\n                        <div className=\"background\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"loginBottom\"></div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\pages\\profile\\Profile.jsx",["84","85","86"],[],"import \"./profile.css\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport ReviewCard from \"../../components/reviewCard/ReviewCard\";\r\nimport { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Profile() {\r\n    const ProfileDoctor = () => {\r\n        const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n        const username = useParams().username;\r\n        const [viewUser, setUser] = useState({});\r\n        const { user } = useContext(AuthContext);\r\n\r\n        const handleAddReview = async(e) => {\r\n            \r\n        }\r\n\r\n        const handleBookBtn = async(e) => {\r\n            e.preventDefault();\r\n        }\r\n\r\n        useEffect(() => {\r\n            const fetchUser = async () => {\r\n                const res = await axios.get(`/doctors?doctorname=${username}`);\r\n                setUser(res.data);\r\n            };\r\n            fetchUser();\r\n        }, [username]);\r\n\r\n        return (\r\n            <>\r\n                <Navbar />\r\n                <div className=\"profile\">\r\n                    <div className=\"profileTop\">\r\n                        <div className=\"topLeft\">\r\n                            <img\r\n                                src={\r\n                                    user?.profilePicture\r\n                                        ? PF + viewUser.profilePicture\r\n                                        : PF + \"person/noAvatar.png\"\r\n                                }\r\n                                alt=\"\"\r\n                                className=\"profileAvatar\"\r\n                            />\r\n                            <span className=\"profileName\">\r\n                                {viewUser.username}\r\n                            </span>\r\n                            <button className=\"profileBook\">\r\n                                <span className=\"bookText\">Book now</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"topRight\">\r\n                            <div className=\"infoTop\">\r\n                                <div className=\"infoCard dept\">\r\n                                    <span className=\"cardTitle\">\r\n                                        Currently Department\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"infoCard spec\">\r\n                                    <span className=\"cardTitle\">\r\n                                        Specialization\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"infoCard exp\">\r\n                                    <span className=\"cardTitle\">\r\n                                        Work expererience\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"infoBottom\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profileBottom\">\r\n                        <div className=\"bottomLeft\">\r\n                            <div className=\"bottomInfo\">\r\n                                <div className=\"bottomInfoText\">\r\n                                    Information\r\n                                </div>\r\n                                <div className=\"bottomInfoTextDetail\">\r\n                                    Birthday:{\" \"}\r\n                                    {viewUser?.dateOfBirth\r\n                                        ? viewUser.dateOfBirth\r\n                                        : \"NaN\"}\r\n                                </div>\r\n                                <div className=\"bottomInfoTextDetail\">\r\n                                    Email:{\" \"}\r\n                                    {viewUser?.email ? viewUser.email : \"NaN\"}\r\n                                </div>\r\n                                <div className=\"bottomInfoTextDetail\">\r\n                                    Phone:{\" \"}\r\n                                    {viewUser?.phoneNumber\r\n                                        ? viewUser.phoneNumber\r\n                                        : \"NaN\"}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bottomRight\">\r\n                            <div className=\"patientCmt\">\r\n                                <span className=\"cmtTitle\">\r\n                                    Patient reviews\r\n                                </span>\r\n                                <button className=\"btnCmt\">\r\n                                    <span className=\"btnCmtTitle\">\r\n                                        + Add a comment\r\n                                    </span>\r\n                                </button>\r\n                                <div className=\"cmtList\">\r\n                                    <ReviewCard user={viewUser}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ProfileDoctor />\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\pages\\calendar\\Calendar.jsx",["87"],[],"import { useState, useEffect, useContext } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport dayjs from \"dayjs\";\r\nimport range from \"lodash-es/range\";\r\nimport \"./calendar.css\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nconst toArray = require(\"dayjs/plugin/toArray\");\r\ndayjs.extend(toArray);\r\n\r\nconst weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\nconst timesOfDay = [\r\n    \"08:00\",\r\n    \"08:30\",\r\n    \"09:00\",\r\n    \"09:30\",\r\n    \"10:00\",\r\n    \"10:30\",\r\n    \"11:00\",\r\n    \"11:30\",\r\n    \"12:00\",\r\n    \"12:30\",\r\n    \"13:00\",\r\n    \"13:30\",\r\n    \"14:00\",\r\n    \"14:30\",\r\n    \"15:00\",\r\n    \"15:30\",\r\n    \"16:00\",\r\n    \"16:30\",\r\n    \"17:00\",\r\n    \"17:30\",\r\n    \"18:00\",\r\n    \"18:30\",\r\n    \"19:00\",\r\n    \"19:30\",\r\n    \"20:00\",\r\n    \"20:30\",\r\n    \"21:00\",\r\n    \"21:30\",\r\n];\r\nconst todayObj = dayjs();\r\nexport default function Calendar() {\r\n    const viewusername = useParams().username;\r\n    const [viewuser, setViewuser] = useState();\r\n    const { user: currentUser } = useContext(AuthContext);\r\n\r\n    const [appsDoctor, setAppsDoctor] = useState([]);\r\n    const [busyTimesOfDay, setBusyTimesOfDay] = useState([]);\r\n\r\n    const [dayObj, setDayObj] = useState(dayjs());\r\n    const [dummyDay, setDummyDay] = useState(dayjs());\r\n    const thisYear = dayObj.year();\r\n    const thisMonth = dayObj.month();\r\n    const daysInMonth = dayObj.daysInMonth();\r\n    const dayObjOf1 = dayjs(`${thisYear}-${thisMonth + 1}-1`);\r\n    const weekDayOf1 = dayObjOf1.day();\r\n    const dayObjOfLast = dayjs(`${thisYear}-${thisMonth + 1}-${daysInMonth}`);\r\n    const weekDayOfLast = dayObjOfLast.day();\r\n\r\n    const handlePrev = () => {\r\n        setDayObj(dayObj.subtract(1, \"month\"));\r\n        setDummyDay(dummyDay.subtract(1, \"month\"));\r\n    };\r\n\r\n    const handleNext = () => {\r\n        setDayObj(dayObj.add(1, \"month\"));\r\n        setDummyDay(dummyDay.add(1, \"month\"));\r\n    };\r\n\r\n    const handleBooking = async (e) => {\r\n        e.preventDefault();\r\n        const dayArr = dayObj.toArray(); // [year, month, day, minute, second]\r\n        console.log(dayArr);\r\n        // const bookingStartDate = new Date(dayArr[0], dayArr[1], dayArr[2], dayArr[3], dayArr[4]);\r\n        const bookingStartDate =\r\n            (dayArr[1] + 1).toString() +\r\n            \"-\" +\r\n            dayArr[2].toString() +\r\n            \"-\" +\r\n            dayArr[0].toString() +\r\n            \" \" +\r\n            dayArr[3].toString() +\r\n            \":\" +\r\n            dayArr[4].toString();\r\n        console.log(bookingStartDate);\r\n        if (dayArr[4] === 30) {\r\n            dayArr[3]++;\r\n            dayArr[4] = 0;\r\n        }\r\n        const bookingEndDate =\r\n            (dayArr[1] + 1).toString() +\r\n            \"-\" +\r\n            dayArr[2].toString() +\r\n            \"-\" +\r\n            dayArr[0].toString() +\r\n            \" \" +\r\n            dayArr[3].toString() +\r\n            \":\" +\r\n            dayArr[4].toString();\r\n        const newAppointment = {\r\n            doctorId: viewuser._id,\r\n            customerId: currentUser._id,\r\n            bookingStartDate: bookingStartDate,\r\n            bookingEndDate: bookingEndDate,\r\n        };\r\n        try {\r\n            await axios.post(\"/appointments/booking\", newAppointment);\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchViewuser = async () => {\r\n            const user = await axios.get(`/doctors?doctorname=${viewusername}`);\r\n            console.log(user.data);\r\n            setViewuser(user.data);\r\n        };\r\n        fetchViewuser();\r\n    }, [viewusername]);\r\n\r\n    useEffect(() => {\r\n        const fetchAppsDoctor = async () => {\r\n            const appsForDoctor = await axios.get(\r\n                `/appointments/${viewuser._id}`\r\n            );\r\n            setAppsDoctor(appsForDoctor.data);\r\n        };\r\n        fetchAppsDoctor();\r\n    }, [viewuser]);\r\n\r\n    const handleDaySelect = (e) => {\r\n        e.preventDefault();\r\n        const s = document.querySelectorAll(\".selected\");\r\n        for (const d of s) d.classList.remove(\"selected\");\r\n        e.target.classList.add(\"selected\");\r\n        setDayObj(dayObj.set(\"date\", e.target.textContent));\r\n        setDummyDay(dummyDay.set(\"date\", e.target.textContent));\r\n    };\r\n\r\n    const handleTimeSelect = (e) => {\r\n        e.preventDefault();\r\n        if (!busyTimesOfDay.includes(e.target.textContent)) {\r\n            const s = document.querySelectorAll(\".time-selected\");\r\n            for (const d of s) d.classList.remove(\"time-selected\");\r\n            e.target.classList.add(\"time-selected\");\r\n            setDayObj(\r\n                dayObj\r\n                    .set(\"hour\", e.target.textContent.substring(0, 2))\r\n                    .set(\"minute\", e.target.textContent.substring(3))\r\n            );\r\n        } else {\r\n            alert(\r\n                \"Very sorry, the Doctor is busy for this time! Please choose another time\"\r\n            );\r\n        }\r\n    };\r\n\r\n    const checkBusyTimesInDay = (day, apps) => {\r\n        const busyTimes = [];\r\n        for (const app of apps) {\r\n            const temp = dayjs(app.bookingStartDate);\r\n            if (day.isSame(temp, \"day\")) {\r\n                for (const time of timesOfDay) {\r\n                    if (\r\n                        parseInt(time.substring(0, 2)) === temp.get(\"hour\") &&\r\n                        parseInt(time.substring(3)) === temp.get(\"minute\")\r\n                    )\r\n                        busyTimes.push(time);\r\n                }\r\n            }\r\n        }\r\n        console.log(busyTimes);\r\n        return busyTimes;\r\n    };\r\n\r\n    useEffect(() => {\r\n        setBusyTimesOfDay(checkBusyTimesInDay(dummyDay, appsDoctor));\r\n    }, [dummyDay]);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"calendarWrapper\">\r\n                <div className=\"header\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"nav nav--prev\"\r\n                        onClick={handlePrev}\r\n                    >\r\n                        Back\r\n                    </button>\r\n                    <div className=\"datetime\">\r\n                        {dayObj.format(\"MMM DD YYYY HH:mm\")}\r\n                    </div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"nav nav--prev\"\r\n                        onClick={handleNext}\r\n                    >\r\n                        Next\r\n                    </button>\r\n                </div>\r\n                <div className=\"calendar\">\r\n                    <div className=\"week-container\">\r\n                        {weekDays.map((d) => (\r\n                            <div className=\"week-cell\" key={d}>\r\n                                {d}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"day-container\">\r\n                        {range(weekDayOf1).map((i) => (\r\n                            <div className=\"day-cell day-cell--faded\" key={i}>\r\n                                {dayObjOf1\r\n                                    .subtract(weekDayOf1 - i, \"day\")\r\n                                    .date()}\r\n                            </div>\r\n                        ))}\r\n\r\n                        {range(daysInMonth).map((i) => (\r\n                            <div\r\n                                className={`day-cell day-cell--in-month${\r\n                                    i + 1 === todayObj.date() &&\r\n                                    thisMonth === todayObj.month() &&\r\n                                    thisYear === todayObj.year()\r\n                                        ? \" day-cell--today\"\r\n                                        : \"\"\r\n                                }`}\r\n                                key={i}\r\n                                onClick={handleDaySelect}\r\n                            >\r\n                                {i + 1}\r\n                            </div>\r\n                        ))}\r\n\r\n                        {range(6 - weekDayOfLast).map((i) => (\r\n                            <div className=\"day-cell day-cell--faded\" key={i}>\r\n                                {dayObjOfLast.add(i + 1, \"day\").date()}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"timePicker\">\r\n                    {timesOfDay.map((t) => {\r\n                        if (busyTimesOfDay.includes(t))\r\n                            return (\r\n                                <div\r\n                                    className=\"time-cell busyTime\"\r\n                                    key={t}\r\n                                    onClick={handleTimeSelect}\r\n                                >\r\n                                    {t}\r\n                                </div>\r\n                            );\r\n                        else\r\n                            return (\r\n                                <div\r\n                                    className=\"time-cell\"\r\n                                    key={t}\r\n                                    onClick={handleTimeSelect}\r\n                                >\r\n                                    {t}\r\n                                </div>\r\n                            );\r\n                    })}\r\n                </div>\r\n                <div className=\"bookNowContain\">\r\n                    <button className=\"bookNowBtn\" onClick={handleBooking}>\r\n                        <span className=\"bookNowText\">Book now</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\apiCalls.js",[],[],"C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\components\\userCard\\UserCard.jsx",[],[],"C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\components\\ranking\\Ranking.jsx",[],[],"C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\components\\reviewCard\\ReviewCard.jsx",["88"],[],"import \"./reviewCard.css\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst delay = 2500;\r\n\r\nexport default function ReviewCard({ user }) {\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const [index, setIndex] = useState(0);\r\n    const [reviews, setReviews] = useState([]);\r\n    const timeoutRef = useRef(null);\r\n\r\n    const resetTimeout = () => {\r\n        if (timeoutRef.current) {\r\n            clearTimeout(timeoutRef.current);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchReviews = async () => {\r\n            let res = [];\r\n            for (const id of user.reviews) {\r\n                const obj = await axios.get(`/reviews/get?reviewId=${id}`);\r\n                const cus = await axios.get(\r\n                    `/customers?customername=${obj.data.customerName}`\r\n                );\r\n                res = [...res, [cus.data, obj.data]];\r\n            }\r\n            setReviews(res);\r\n        };\r\n        fetchReviews();\r\n    }, [user.reviews]);\r\n\r\n    useEffect(() => {\r\n        resetTimeout();\r\n        timeoutRef.current = setTimeout(\r\n            () =>\r\n                setIndex((prevIndex) =>\r\n                    prevIndex === reviews.length - 1 ? 0 : prevIndex + 1\r\n                ),\r\n            delay\r\n        );\r\n\r\n        return () => {\r\n            resetTimeout();\r\n        };\r\n    }, [index]);\r\n\r\n    return (\r\n        <div className=\"slideshow\">\r\n            <div\r\n                className=\"slideshowSlider\"\r\n                style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\r\n            >\r\n                {reviews.length &&\r\n                    reviews.map((r, index) => {\r\n                        return (\r\n                            <div className=\"slide\" key={index}>\r\n                                <div className=\"slideLeft\">\r\n                                    <img\r\n                                        src={\r\n                                            user?.profilePicture\r\n                                                ? PF + r[0].profilePicture\r\n                                                : PF + \"person/noAvatar.png\"\r\n                                        }\r\n                                        alt=\"\"\r\n                                        className=\"reviewAvatar\"\r\n                                    />\r\n                                    <div className=\"reviewUserName\">\r\n                                        {r[0].username}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"slideRight\">\r\n                                    <p className=\"reviewPara\">{r[1].desc}</p>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n            </div>\r\n\r\n            <div className=\"slideshowDots\">\r\n                {reviews.map((_, idx) => (\r\n                    <div\r\n                        key={idx}\r\n                        className={`slideshowDot${\r\n                            index === idx ? \" active\" : \"\"\r\n                        }`}\r\n                        onClick={() => {\r\n                            setIndex(idx);\r\n                        }}\r\n                    ></div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\quinn\\Desktop\\main2\\MERN_HotDoc_Client\\src\\components\\navbar\\Navbar.jsx",[],[],{"ruleId":"89","severity":1,"message":"90","line":10,"column":13,"nodeType":"91","messageId":"92","endLine":10,"endColumn":17},{"ruleId":"89","severity":1,"message":"93","line":10,"column":19,"nodeType":"91","messageId":"92","endLine":10,"endColumn":29},{"ruleId":"89","severity":1,"message":"94","line":10,"column":31,"nodeType":"91","messageId":"92","endLine":10,"endColumn":36},{"ruleId":"89","severity":1,"message":"95","line":3,"column":22,"nodeType":"91","messageId":"92","endLine":3,"endColumn":28},{"ruleId":"89","severity":1,"message":"96","line":8,"column":10,"nodeType":"91","messageId":"92","endLine":8,"endColumn":14},{"ruleId":"89","severity":1,"message":"96","line":6,"column":10,"nodeType":"91","messageId":"92","endLine":6,"endColumn":14},{"ruleId":"89","severity":1,"message":"95","line":4,"column":43,"nodeType":"91","messageId":"92","endLine":4,"endColumn":49},{"ruleId":"89","severity":1,"message":"97","line":16,"column":15,"nodeType":"91","messageId":"92","endLine":16,"endColumn":30},{"ruleId":"89","severity":1,"message":"98","line":20,"column":15,"nodeType":"91","messageId":"92","endLine":20,"endColumn":28},{"ruleId":"99","severity":1,"message":"100","line":182,"column":8,"nodeType":"101","endLine":182,"endColumn":18,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":47,"column":8,"nodeType":"101","endLine":47,"endColumn":15,"suggestions":"104"},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'isFetching' is assigned a value but never used.","'error' is assigned a value but never used.","'useRef' is defined but never used.","'Link' is defined but never used.","'handleAddReview' is assigned a value but never used.","'handleBookBtn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'appsDoctor'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBusyTimesOfDay' needs the current value of 'appsDoctor'.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'reviews.length'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIndex' needs the current value of 'reviews.length'.",["106"],{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [appsDoctor, dummyDay]",{"range":"111","text":"112"},"Update the dependencies array to be: [index, reviews.length]",{"range":"113","text":"114"},[5799,5809],"[appsDoctor, dummyDay]",[1374,1381],"[index, reviews.length]"]